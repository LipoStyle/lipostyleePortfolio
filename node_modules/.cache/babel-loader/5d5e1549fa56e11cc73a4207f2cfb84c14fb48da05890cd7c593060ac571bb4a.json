{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mario\\\\Documents\\\\LipoStyle's_Project\\\\Github\\\\lipostyleePortfolio\\\\src\\\\pages\\\\home\\\\hero\\\\Hero.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Hero.css\";\nimport Button from \"../../../components/button/Button\";\nimport me from \"../../../images/me.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Hero = () => {\n  _s();\n  const [typedQuote, setTypedQuote] = useState(\"\"); // State to hold the typed quote\n  const quote = \"The journey of a thousand miles begins with one step.\"; // Full quote\n\n  useEffect(() => {\n    const timeouts = []; // Store timeout IDs to clear them later\n\n    // Loop through each character in the quote\n    for (let index = 0; index < quote.length; index++) {\n      const timeoutId = setTimeout(() => {\n        setTypedQuote(prev => prev + quote.charAt(index));\n      }, 100 * index); // Delay increases with each character\n\n      timeouts.push(timeoutId); // Add each timeout ID to the array\n    }\n\n    // Cleanup function to clear timeouts if component unmounts or effect is re-run\n    return () => {\n      timeouts.forEach(timeoutId => clearTimeout(timeoutId));\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"hero\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hero-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-job-me\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-of-me\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Hi, I'm Manuel Lipo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"hero-profession\",\n            children: \"Full-Stack Developer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"quote\",\n            children: typedQuote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hero-cta-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              url: \"/portfolio\",\n              name: \"My Work\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              url: \"/contact\",\n              name: \"Contact Me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              url: \"/files/Manuel-Lipo-CV.pdf\",\n              downloadLink: \"Manuel-Lipo-CV.pdf\",\n              name: \"Download CV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: me,\n          alt: \"ME\",\n          className: \"image-of-me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero-cta-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            url: \"/portfolio\",\n            name: \"My Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            url: \"/contact\",\n            name: \"Contact Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            url: \"/files/Manuel-Lipo-CV.pdf\",\n            downloadLink: \"Manuel-Lipo-CV.pdf\",\n            name: \"Download CV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Hero, \"ffexGkf1q1hoyub/1bB+jLDOHt0=\");\n_c = Hero;\nexport default Hero;\nvar _c;\n$RefreshReg$(_c, \"Hero\");","map":{"version":3,"names":["React","useState","useEffect","Button","me","jsxDEV","_jsxDEV","Hero","_s","typedQuote","setTypedQuote","quote","timeouts","index","length","timeoutId","setTimeout","prev","charAt","push","forEach","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","url","name","downloadLink","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Mario/Documents/LipoStyle's_Project/Github/lipostyleePortfolio/src/pages/home/hero/Hero.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./Hero.css\";\r\nimport Button from \"../../../components/button/Button\";\r\n\r\nimport me from \"../../../images/me.png\"\r\n\r\nconst Hero = () => {\r\n  const [typedQuote, setTypedQuote] = useState(\"\"); // State to hold the typed quote\r\n  const quote = \"The journey of a thousand miles begins with one step.\"; // Full quote\r\n\r\n  useEffect(() => {\r\n    const timeouts = []; // Store timeout IDs to clear them later\r\n\r\n    // Loop through each character in the quote\r\n    for (let index = 0; index < quote.length; index++) {\r\n      const timeoutId = setTimeout(() => {\r\n        setTypedQuote((prev) => prev + quote.charAt(index));\r\n      }, 100 * index); // Delay increases with each character\r\n\r\n      timeouts.push(timeoutId); // Add each timeout ID to the array\r\n    }\r\n\r\n    // Cleanup function to clear timeouts if component unmounts or effect is re-run\r\n    return () => {\r\n      timeouts.forEach((timeoutId) => clearTimeout(timeoutId));\r\n    };\r\n  }, []); \r\n\r\n  return (\r\n    <section className=\"hero\">\r\n      <div className=\"hero-content\">\r\n        <div className=\"title-job-me\">\r\n          <div className=\"text-of-me\">\r\n            <h1>Hi, I'm Manuel Lipo</h1>\r\n            <h2 className=\"hero-profession\">Full-Stack Developer</h2>\r\n            {/* Typing effect applied to the quote */}\r\n            <p className=\"quote\">{typedQuote}</p>\r\n            <div className=\"hero-cta-buttons\">\r\n            <Button url={\"/portfolio\"} name={\"My Work\"} />\r\n            <Button url={\"/contact\"} name={\"Contact Me\"} />\r\n            <Button\r\n              url={\"/files/Manuel-Lipo-CV.pdf\"}\r\n              downloadLink={\"Manuel-Lipo-CV.pdf\"}\r\n              name={\"Download CV\"}\r\n            />\r\n          </div>\r\n          </div>\r\n          <img src={me} alt=\"ME\" className=\"image-of-me\"/>\r\n          <div className=\"hero-cta-buttons\">\r\n            <Button url={\"/portfolio\"} name={\"My Work\"} />\r\n            <Button url={\"/contact\"} name={\"Contact Me\"} />\r\n            <Button\r\n              url={\"/files/Manuel-Lipo-CV.pdf\"}\r\n              downloadLink={\"Manuel-Lipo-CV.pdf\"}\r\n              name={\"Download CV\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Hero;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}